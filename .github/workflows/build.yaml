---
name: Build image

'on':
  push:

jobs:
  build_matrix:
    name: Build execution matrix
    runs-on: [self-hosted, x64]
    outputs:
      matrix: ${{ steps.matrix.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build execution matrix
        id: matrix
        uses: drugscom/docker-matrix-action@v1

  build_image_x64:
    name: Build ${{ matrix.image-name }}
    needs: build_matrix
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.build_matrix.outputs.matrix) }}
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Log into container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.GH_CR_USERNAME }}
          password: ${{ secrets.GH_CR_PAT }}
      - name: Build and publish container image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.revision=${{ github.sha }}
          push: true
          tags: ${{ matrix.tags }}
      - name: Notify Slack - Success
        if: success()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@9b583ecdaddaa28bede5a056d8d8c8ff0363d66f
        with:
          message_id: ${{ steps.slack.outputs.message_id }}
          channel: deploy
          status: Published "${{ matrix.image-name }}"
          color: good
      - name: Notify Slack - Failure
        if: failure()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@9b583ecdaddaa28bede5a056d8d8c8ff0363d66f
        with:
          message_id: ${{ steps.slack.outputs.message_id }}
          channel: deploy
          status: Failed to build "${{ matrix.image-name }}"
          color: danger

  build_image_arm64:
    name: Build ${{ matrix.image-name }}
    needs:
      - build_matrix
      - start_runner
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.build_matrix.outputs.matrix) }}
    runs-on: [self-hosted, arm64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Log into container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.GH_CR_USERNAME }}
          password: ${{ secrets.GH_CR_PAT }}
      - name: Build and publish container image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.revision=${{ github.sha }}
          push: true
          tags: ${{ matrix.tags }}
      - name: Notify Slack - Success
        if: success()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@9b583ecdaddaa28bede5a056d8d8c8ff0363d66f
        with:
          message_id: ${{ steps.slack.outputs.message_id }}
          channel: deploy
          status: Published "${{ matrix.image-name }}"
          color: good
      - name: Notify Slack - Failure
        if: failure()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@9b583ecdaddaa28bede5a056d8d8c8ff0363d66f
        with:
          message_id: ${{ steps.slack.outputs.message_id }}
          channel: deploy
          status: Failed to build "${{ matrix.image-name }}"
          color: danger

  start_runner:
    name: Start GitHub Actions Runner
    runs-on: [self-hosted, x64]
    outputs:
      label: ${{ steps.runner.outputs.label }}
      ec2-instance-id: ${{ steps.runner.outputs.ec2-instance-id }}
    steps:
      - name: Start EC2 runner
        id: runner
        uses: drugscom/ec2-github-runner@2e4121bb847158f198f39a9a36d3ce6911a5daca
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_REGION: us-east-1
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        with:
          mode: start
          github-token: ${{ secrets.GH_RUNNERS_PAT }}
          ec2-image-id: ami-0148cc0432d48a1d5
          ec2-instance-type: c6g.xlarge
          subnet-id: subnet-b373efd5
          security-group-id: sg-0ffebdfb1d6c11596

  stop_runner:
    name: Stop GitHub Actions Runner
    needs:
      - start_runner
      - build_image_arm64
    runs-on: [self-hosted, x64]
    if: always()
    steps:
      - name: Stop EC2 runner
        uses: drugscom/ec2-github-runner@2e4121bb847158f198f39a9a36d3ce6911a5daca
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_REGION: us-east-1
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        with:
          mode: stop
          github-token: ${{ secrets.GH_RUNNERS_PAT }}
          label: ${{ needs.start_runner.outputs.label }}
          ec2-instance-id: ${{ needs.start_runner.outputs.ec2-instance-id }}
